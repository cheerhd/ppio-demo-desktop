11-13 15:21:22.690 [INFO] [     log] Setup Logging done config.go:216
11-13 15:21:22.690 [DEBU] [ ppiocmd] daemonStart datadir= /Volumes/ExtCard/user6 main.go:242
11-13 15:21:22.690 [DEBU] [ ppiocmd] daemonStart configFile=  main.go:245
11-13 15:21:22.690 [DEBU] [ ppiocmd] daemonStart datadir=/Volumes/ExtCard/user6 main.go:251
11-13 15:21:22.693 [DEBU] [    ppio] json -> config config.go:239
11-13 15:21:22.693 [DEBU] [ ppiocmd] config.StroagePath = storage main.go:289
11-13 15:21:22.694 [DEBU] [    ppio] newPpioNode /Volumes/ExtCard/user6 {
  "Net": {
    "BindIP": "0.0.0.0",
    "UDPPort": 8066,
    "TCPPort": 8066,
    "Debug": true,
    "DisableTCP": false,
    "BindIP4Test": ""
  },
  "RPCHost": "127.0.0.1",
  "RPCPort": 18066,
  "PrivateKey": "",
  "TestNet": "",
  "QoSServerConfig": {
    "Enable": false,
    "Network": "udp",
    "Addr": "127.0.0.1:5000",
    "Tag": "ppioqos"
  },
  "UseNewAccount": false,
  "Bootstrap": {
    "Name": "bootstrap",
    "PeerIDHex": "002508021221023d5a5e5f45ebb362622ffd7a7fe90c457ee8f8f0c96c5387a2ae36a3634a43ae",
    "PeerIDBase58": "16Uiu2HAkyZAmjRgzRgKgSwiUf4xgX6oCdXGLKbSRfp1Lvik5DGDT",
    "IP": "192.168.50.100",
    "UDPPort": 8020,
    "TCPPort": 8020,
    "HTTPPort": 0
  },
  "UserAccount": "",
  "StroagePath": "storage",
  "StorageMax": 8589934592,
  "StorageGCThreshold": 0.8,
  "StorageGCPeriod": 30,
  "AddressCenter": "",
  "P2PMaxConnection": 0,
  "P2PGoodDelay": 0,
  "P2PIntervalKeepAlive": 0,
  "P2PMaxNoKeepAlive": 0,
  "P2PNoTask": 0,
  "P2PDelayLeave": 0,
  "RetryObjectPut": 3,
  "RetryObjectGet": 3,
  "RetryObjectDelete": 3,
  "RetryHandshake": 3,
  "RetryMetadataPut": 3,
  "RetryMetadataGet": 3,
  "OverlayConfig": {
    "Switch": false,
    "NeighborNodeMaxNum": 10,
    "BackupNodeMaxNum": 10,
    "OtherNodeMaxNum": 1024,
    "LastRTTExpireTime": 86400,
    "FloodingInterval": 600,
    "RTTDetectInterval": 120,
    "MaxConnection": 50,
    "OverlayPersistencePath": "/Users/Jason/.ppio/overlay.db"
  },
  "HotfileConfig": {
    "DLFreqBeginCopy": 10,
    "DLFreqBeginClean": 10,
    "FreqCalcInterval": 600,
    "BroadcastWidth": 2,
    "BroadcastTTL": 5,
    "OverlayHotfilePersistencePath": "/Users/Jason/.ppio/hotfile.db"
  },
  "ConfigVersion": 1
} ppio.go:167
11-13 15:21:22.694 [DEBU] [    ppio] newPpioNode key:  ppio.go:169
11-13 15:21:22.694 [WARN] [ service] LoadPrivateKey no private key service.go:220
11-13 15:21:22.694 [DEBU] [ service] GenerateKey use tcp port as random seed 8066 service.go:201
11-13 15:21:22.694 [DEBU] [ service] prvkey be8700342c67badd5939f6d876aca199ee16cbc840f937a2469c6623fb495db5 service.go:213
11-13 15:21:22.694 [DEBU] [ service] pubkey 04416bc64849b47a4ce3689a4b8da2273794a287c50189cd58753cfc767b3149c9c75ee634cb6bb594b25a9792bab246141ce137dd76a6e4905747612ff71de3d2 service.go:214
11-13 15:21:22.695 [WARN] [     kcp] open json failed kcp.conf &PathError{Op=open,Path=kcp.conf,Err=no such file or directory} kcp.go:64
11-13 15:21:22.695 [INFO] [net.PHos] LocalPeerID: base58= 16Uiu2HAkyq3oANVJPmyDikFbr7KgvPK7HzHEHoYLNwH6B37m7viU hex= 00250802122102416bc64849b47a4ce3689a4b8da2273794a287c50189cd58753cfc767b3149c9 simplep2p.go:61
11-13 15:21:22.695 [INFO] [net.PHos] listen tcp &Config{BindIP=0.0.0.0,UDPPort=8066,TCPPort=8066,Debug=true,DisableTCP=false,BindIP4Test=} simplep2p.go:86
11-13 15:21:22.733 [DEBU] [   kcpgo] ServeConn 0xc00030a000 sess.go:1017
11-13 15:21:22.733 [DEBU] [     kcp] initListener SetDSCP: &SyscallError{Syscall=setsockopt,Err=invalid argument} kcp.go:141
11-13 15:21:22.734 [DEBU] [net.PHos] listen kcp &Config{BindIP=0.0.0.0,UDPPort=8066,TCPPort=8066,Debug=true,DisableTCP=false,BindIP4Test=} &kcpt.Listener{log:log.Logger{logger:(*log.eventLogger)(0xc0002eeec0), wlogger:(*logging.Logger)(0xc0002d1f50), object:(*kcpt.Listener)(0xc0001a9680)}, udpConn:(*net.UDPConn)(0xc0000e2868), listener:(*kcp.Listener)(0xc00030a000), config:(*kcpt.Config)(0xc0002b9040), chConns:(chan net.Conn)(0xc0002e0a20), sessions:[]*hsmux.Session(nil), sessionsLock:(*sync.Mutex)(0xc0002fe8c0), ticker:(*util.Ticker)(nil), die:(chan struct {})(nil)} simplep2p.go:93
11-13 15:21:22.734 [DEBU] [net.PHos] serveListener tcp simplep2p.go:99
11-13 15:21:22.734 [DEBU] [net.PHos] serveListener udp simplep2p.go:99
11-13 15:21:22.734 [DEBU] [net.Host] createP2PHost ph= &net.simpleP2PHost{log:log.Logger{logger:(*log.eventLogger)(0xc0002eee00), wlogger:(*logging.Logger)(0xc0002d1cb0), object:(*net.simpleP2PHost)(0xc0001cf9e0)}, privateKey:(*crypto.Secp256k1PrivateKey)(0xc0002d1a70), tcpListener:(*net.TCPListener)(0xc0000e2860), kcpListener:(*kcpt.Listener)(0xc0001a9680), peerID:protocol.PeerId{ID:"\x00%\b\x02\x12!\x02Ak\xc6HI\xb4zL\xe3h\x9aK\x8d\xa2'7\x94\xa2\x87\xc5\x01\x89\xcdXu<\xfcv{1I\xc9"}, transport:(*secio.Transport)(0xc0002eede0), kcpConfig:(*kcpt.Config)(0xc0002b9040), callback:(func(net.SecureConn))(0x455fe20), pendingConnsLock:sync.Mutex{state:0, sema:0x0}, pendingConns:map[net.Conn]struct {}{}} host.go:365
11-13 15:21:22.734 [DEBU] [net.Host] createP2PHost config= &Config{BindIP=0.0.0.0,UDPPort=8066,TCPPort=8066,Debug=true,DisableTCP=false,BindIP4Test=} host.go:366
11-13 15:21:22.734 [INFO] [ service] NewService: PeerID, Account, svc.Host, config.Net 00250802122102416bc64849b47a4ce3689a4b8da2273794a287c50189cd58753cfc767b3149c9 00250802122102416bc64849b47a4ce3689a4b8da2273794a287c50189cd58753cfc767b3149c9 00250802122102416bc64849b47a4ce3689a4b8da2273794a287c50189cd58753cfc767b3149c9 &Config{BindIP=0.0.0.0,UDPPort=8066,TCPPort=8066,Debug=true,DisableTCP=false,BindIP4Test=} service.go:315
11-13 15:21:22.734 [INFO] [ service] NewService: svc.ServerInfo [name=ppio, addr=[IP=<nil>, tpcport=8066, tpcport=8066]] service.go:316
11-13 15:21:22.734 [INFO] [     qos] QoS not configured or enable is false, not log log.go:80
11-13 15:21:22.754 [DEBU] [     net] Mux.bindMethod add auto function OnUDP_PP_DetectRTT 14 Method{Name=OnUDP_PP_DetectRTT,PkgPath=,Type=func(*pp.connManager, net.Addr, *protocol.PP_DetectRTTMsg, *protocol.Header),Func=<func(*pp.connManager, net.Addr, *protocol.PP_DetectRTTMsg, *protocol.Header) Value>,Index=12} &net.decodeMessageHandler{msgtype:(*reflect.rtype)(0x49ee2c0), handlerfunc:reflect.Value{typ:(*reflect.rtype)(0x4924f60), ptr:(unsafe.Pointer)(0xc0002fac40), flag:0x13}} true mux.go:223
11-13 15:21:22.754 [DEBU] [     net] Mux.bindMethod add auto function OnUDP_PP_Error 4 Method{Name=OnUDP_PP_Error,PkgPath=,Type=func(*pp.connManager, net.Addr, *protocol.PP_ErrorMsg, *protocol.Header),Func=<func(*pp.connManager, net.Addr, *protocol.PP_ErrorMsg, *protocol.Header) Value>,Index=13} &net.decodeMessageHandler{msgtype:(*reflect.rtype)(0x49a3120), handlerfunc:reflect.Value{typ:(*reflect.rtype)(0x4924fc0), ptr:(unsafe.Pointer)(0xc0002fad00), flag:0x13}} true mux.go:223
11-13 15:21:22.754 [DEBU] [     net] Mux.bindMethod add auto function OnUDP_PP_Handshake 1 Method{Name=OnUDP_PP_Handshake,PkgPath=,Type=func(*pp.connManager, net.Addr, *protocol.PP_HandshakeMsg, *protocol.Header),Func=<func(*pp.connManager, net.Addr, *protocol.PP_HandshakeMsg, *protocol.Header) Value>,Index=14} &net.decodeMessageHandler{msgtype:(*reflect.rtype)(0x49ee500), handlerfunc:reflect.Value{typ:(*reflect.rtype)(0x4925080), ptr:(unsafe.Pointer)(0xc0002fadc0), flag:0x13}} true mux.go:223
11-13 15:21:22.754 [DEBU] [     net] Mux.bindMethod add auto function OnUDP_PP_HandshakeAck 19 Method{Name=OnUDP_PP_HandshakeAck,PkgPath=,Type=func(*pp.connManager, net.Addr, *protocol.PP_HandshakeAckMsg, *protocol.Header),Func=<func(*pp.connManager, net.Addr, *protocol.PP_HandshakeAckMsg, *protocol.Header) Value>,Index=15} &net.decodeMessageHandler{msgtype:(*reflect.rtype)(0x4981e20), handlerfunc:reflect.Value{typ:(*reflect.rtype)(0x4925020), ptr:(unsafe.Pointer)(0xc0002fae80), flag:0x13}} true mux.go:223
11-13 15:21:22.754 [DEBU] [     net] Mux.bindMethod add auto function OnUDP_PP_RelayHandshake 18 Method{Name=OnUDP_PP_RelayHandshake,PkgPath=,Type=func(*pp.connManager, net.Addr, *protocol.PP_RelayHandshakeMsg, *protocol.Header),Func=<func(*pp.connManager, net.Addr, *protocol.PP_RelayHandshakeMsg, *protocol.Header) Value>,Index=16} &net.decodeMessageHandler{msgtype:(*reflect.rtype)(0x49d5a20), handlerfunc:reflect.Value{typ:(*reflect.rtype)(0x49250e0), ptr:(unsafe.Pointer)(0xc0002faf40), flag:0x13}} true mux.go:223
11-13 15:21:23.064 [DEBU] [     net] Mux.Bind ok <*pp.connManager Value> *pp.connManager  27 5 &net.udpMessageMux{handlers:map[int]func(net.Addr, []uint8, *protocol.Header){1:(func(net.Addr, []uint8, *protocol.Header))(0x455fff0), 19:(func(net.Addr, []uint8, *protocol.Header))(0x455fff0), 18:(func(net.Addr, []uint8, *protocol.Header))(0x455fff0), 14:(func(net.Addr, []uint8, *protocol.Header))(0x455fff0), 4:(func(net.Addr, []uint8, *protocol.Header))(0x455fff0)}, defaultHandler:(func(net.Addr, []uint8, *protocol.Header))(0x455ff70)} 0xc0002f16d0 mux.go:240
11-13 15:21:23.065 [ERRO] [Requeste] Close <nil> client.go:150
11-13 15:21:23.065 [DEBU] [    ppio] newPpioNode storage load start: /Volumes/ExtCard/user6/storage ppio.go:245
11-13 15:21:23.065 [INFO] [ storage] Load all objects from dir= /Volumes/ExtCard/user6/storage storage.go:505
11-13 15:21:23.065 [DEBU] [ storage] loadObject path /Volumes/ExtCard/user6/storage/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39.desc  hash= 09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39 storage.go:552
11-13 15:21:23.065 [DEBU] [ storage] readObjectDesc() descFilePath= /Volumes/ExtCard/user6/storage/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39.desc storage.go:843
11-13 15:21:23.068 [DEBU] [ storage] line:  1 len:  5 storage.go:878
11-13 15:21:23.068 [DEBU] [ storage] line:  2 len:  5 storage.go:878
11-13 15:21:23.068 [DEBU] [ storage] segment length e0f4b3cc442d672ccc7022045540167150903f10ad3cca31174d3594574d53f8 29 storage.go:926
11-13 15:21:23.068 [DEBU] [ storage] ReadSegment segId, len(desc.pieceMap)= e0f4b3cc442d672ccc7022045540167150903f10ad3cca31174d3594574d53f8 1 storage.go:750
11-13 15:21:23.069 [DEBU] [ storage] ReadSegment return segId, len(desc.pieceMap)= E0F4B3CC 1 storage.go:836
11-13 15:21:23.069 [DEBU] [ storage] ReadSegment close /Volumes/ExtCard/user6/storage/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39.dat storage.go:769
11-13 15:21:23.069 [DEBU] [ storage] segStr: SegmentDesc(09D700F4 E0F4B3CC 29) storage.go:955
11-13 15:21:23.069 [DEBU] [ storage] readObjectDesc() close /Volumes/ExtCard/user6/storage/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39/09D700F451C8CCE7D510E7C7CB3B21F2C91D7AA5191E30DC88E5CD3C5C5F9E39.desc storage.go:851
11-13 15:21:23.069 [DEBU] [ storage] Load add object 09d700f451c8cce7d510e7c7cb3b21f2c91d7aa5191e30dc88e5cd3c5c5f9e39 29 1 storage.go:529
11-13 15:21:23.069 [DEBU] [ storage] loadObject path /Volumes/ExtCard/user6/storage/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17.desc  hash= B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17 storage.go:552
11-13 15:21:23.069 [DEBU] [ storage] readObjectDesc() descFilePath= /Volumes/ExtCard/user6/storage/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17.desc storage.go:843
11-13 15:21:23.070 [DEBU] [ storage] line:  1 len:  5 storage.go:878
11-13 15:21:23.070 [DEBU] [ storage] line:  2 len:  5 storage.go:878
11-13 15:21:23.070 [DEBU] [ storage] segment length 184234cf3640788db139ab81f4b3317ab7c88370afd6262d5ddc747b1ee01840 16777216 storage.go:926
11-13 15:21:23.071 [DEBU] [ storage] ReadSegment segId, len(desc.pieceMap)= 184234cf3640788db139ab81f4b3317ab7c88370afd6262d5ddc747b1ee01840 128 storage.go:750
11-13 15:21:23.358 [DEBU] [ storage] ReadSegment [125]  129 238 221 14 203 24 75 119 storage.go:808
11-13 15:21:23.360 [DEBU] [ storage] ReadSegment pieceDesc.checkSum 639936755 storage.go:811
11-13 15:21:23.360 [DEBU] [ storage] ReadSegment h2                 F3A82426 storage.go:812
11-13 15:21:23.365 [DEBU] [ storage] ReadSegment return segId, len(desc.pieceMap)= 184234CF 128 storage.go:836
11-13 15:21:23.365 [DEBU] [ storage] ReadSegment close /Volumes/ExtCard/user6/storage/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17/FB5384A3DD9C0999A8089F010B6F70967C74CC5E3A376268873C011B1E22BC04.dat storage.go:769
11-13 15:21:23.368 [DEBU] [ storage] segStr: SegmentDesc(FB5384A3 184234CF 16777216) storage.go:955
11-13 15:21:23.368 [DEBU] [ storage] line:  3 len:  5 storage.go:878
11-13 15:21:23.368 [DEBU] [ storage] segment length c7061bfff6992e75084376d14f22d4047ff0e030c5580a090723a360514d6787 15866368 storage.go:926
11-13 15:21:23.368 [DEBU] [ storage] ReadSegment segId, len(desc.pieceMap)= c7061bfff6992e75084376d14f22d4047ff0e030c5580a090723a360514d6787 122 storage.go:750
11-13 15:21:23.428 [DEBU] [   kcpgo] newUDPSession 0xc00010c000 0xc00030a000 0xc0000e2868 sess.go:138
11-13 15:21:23.428 [DEBU] [kcp.List] kcp.monitor AcceptKCP ok 0xc00010c000 kcp.go:346
11-13 15:21:23.429 [DEBU] [kcp.List] handleConn 0xc00010c000 kcp.go:352
11-13 15:21:23.515 [DEBU] [   kcpgo] newUDPSession 0xc00010c140 0xc00030a000 0xc0000e2868 sess.go:138
11-13 15:21:23.516 [DEBU] [kcp.List] kcp.monitor AcceptKCP ok 0xc00010c140 kcp.go:346
11-13 15:21:23.516 [DEBU] [kcp.List] handleConn 0xc00010c140 kcp.go:352
11-13 15:21:23.714 [DEBU] [ storage] ReadSegment return segId, len(desc.pieceMap)= C7061BFF 122 storage.go:836
11-13 15:21:23.714 [DEBU] [ storage] ReadSegment close /Volumes/ExtCard/user6/storage/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17/D7C94BC4A0D6547222BE8D2DDCEFA6E8E1E82617DFDDAEACE8D5D03C7AB18880.dat storage.go:769
11-13 15:21:23.716 [DEBU] [ storage] segStr: SegmentDesc(D7C94BC4 C7061BFF 15866368) storage.go:955
11-13 15:21:23.716 [DEBU] [ storage] readObjectDesc() close /Volumes/ExtCard/user6/storage/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17/B5E829CF4631DB70882E05E14A9C74E4C9E4645233BBE318A03869582BBF0B17.desc storage.go:851
11-13 15:21:23.717 [DEBU] [ storage] Load add object b5e829cf4631db70882e05e14a9c74e4c9e4645233bbe318a03869582bbf0b17 32643584 2 storage.go:529
11-13 15:21:23.717 [DEBU] [    ppio] newPpioNode data cache load stop <nil> ppio.go:249
11-13 15:21:23.717 [DEBU] [    ppio] NewPpioNode node != nil ppio.go:129
11-13 15:21:23.717 [DEBU] [ ppiocmd] node= &ppio.PpioNode{log:log.Logger{logger:(*log.eventLogger)(0xc0002eea80), wlogger:(*logging.Logger)(0xc0002d1770), object:(*ppio.PpioNode)(0xc0001b17a0)}, datadir:"/Volumes/ExtCard/user6", config:(*ppio.Config)(0xc0002ec750), key:crypto.PrivateKey(nil), service:(*service.Service)(0xc000129080), serversInfo:(*common.ServersInfo)(nil), pm:(*pp.connManager)(0xc0002b9180), overlayMgr:(*pp.OverlayManager)(0xc0001bebb0), overlayHotfileMgr:(*pp.OverlayHotfileManager)(0xc000360930), ticker:(*util.Ticker)(nil), bootstrap:(*bootstrap.AsyncClient)(0xc0000e2ed0), indexer:indexer.AsyncIndexer(nil), verifier:verifier.AsyncVerifier(nil), schedFactory:sched.Factory{}, dm:(*job.DownloadManager)(0xc0002d7e00), storage:(*ppio.Storage)(0xc0002fafc0), dataCache:(*cache.userDataCache)(0xc00035b350), jobmgr:(*peer.jobManager)(0xc000398120), objectService:(*ppio.objectService)(0xc0002d7c20), peerInfo:(*protocol.PeerInfo)(0xc0002ef7a0), stats:(*qos.UserStats)(0xc0002e0840)} main.go:317
11-13 15:21:23.718 [INFO] [    ppio] Start ppio Server ppio.go:297
11-13 15:21:23.718 [DEBU] [    ppio] Start loadNodeTask ppio.go:299
11-13 15:21:23.718 [INFO] [    ppio] Start node service ppio.go:302
11-13 15:21:23.718 [INFO] [ service] Start BindIP=0.0.0.0
TCPPort=8066
UDPPort=8066
RPCHost=127.0.0.1
RPCPort=18066
 service.go:337
11-13 15:21:23.718 [DEBU] [TaskQueu] Start task.go:25
11-13 15:21:23.718 [DEBU] [net.Host] Start &net.simpleP2PHost{log:log.Logger{logger:(*log.eventLogger)(0xc0002eee00), wlogger:(*logging.Logger)(0xc0002d1cb0), object:(*net.simpleP2PHost)(0xc0001cf9e0)}, privateKey:(*crypto.Secp256k1PrivateKey)(0xc0002d1a70), tcpListener:(*net.TCPListener)(0xc0000e2860), kcpListener:(*kcpt.Listener)(0xc0001a9680), peerID:protocol.PeerId{ID:"\x00%\b\x02\x12!\x02Ak\xc6HI\xb4zL\xe3h\x9aK\x8d\xa2'7\x94\xa2\x87\xc5\x01\x89\xcdXu<\xfcv{1I\xc9"}, transport:(*secio.Transport)(0xc0002eede0), kcpConfig:(*kcpt.Config)(0xc0002b9040), callback:(func(net.SecureConn))(0x455fe20), pendingConnsLock:sync.Mutex{state:0, sema:0x0}, pendingConns:map[net.Conn]struct {}{}} host.go:373
11-13 15:21:23.718 [INFO] [ service] start rpc on: 127.0.0.1:18066 service.go:340
11-13 15:21:23.718 [INFO] [    ppio] Start node ticker ppio.go:307
11-13 15:21:23.718 [DEBU] [    ppio] Node Ticker &util.Ticker{ticker:(*time.Ticker)(0xc0003c2000), done:(*util.OnceEvent)(0xc0000e2048)} ppio.go:309
11-13 15:21:23.718 [DEBU] [    ppio] Start end ppio.go:318
11-13 15:21:23.718 [INFO] [net.Host] readUDPMessageLoop host.go:210
11-13 15:21:23.718 [DEBU] [  bs.cli] ListServers 192.168.50.100 client.go:65
11-13 15:21:23.718 [DEBU] [     rpc] RunHTTP 127.0.0.1:18066 rpc.go:164
11-13 15:21:23.718 [DEBU] [net.Host] doDialOne 192.168.50.100:8020 002508021221023d5a5e5f45ebb362622ffd7a7fe90c457ee8f8f0c96c5387a2ae36a3634a43ae false 0xc0001a2b10 host.go:101
11-13 15:21:23.719 [DEBU] [net.PHos] Dial 192.168.50.100:8020 simplep2p.go:223
11-13 15:21:23.729 [DEBU] [   kcpgo] ReuseConn 192.168.50.100:8020 a7a9524e [::]:8066 0xc0000e2868 sess.go:1093
11-13 15:21:23.729 [DEBU] [   kcpgo] newUDPSession 0xc00010c500 0xc00030a000 0xc0000e2868 sess.go:138
11-13 15:21:23.730 [DEBU] [   kcpgo] kcp: Add session kcp.sessionKey{addr:"192.168.50.100:8020", convID:0xa7a9524e} 3 [::]:8066 sess.go:828
11-13 15:21:23.730 [DEBU] [     kcp] kcp.Dial ok 0xc0002e60c0 0xc0001a8100 0xc00010c500 kcp.go:326
11-13 15:21:23.730 [DEBU] [net.PHos] Dial ok 192.168.50.100:8020 simplep2p.go:236
11-13 15:21:23.730 [DEBU] [net.PHos] Dial SecureOutbound 192.168.50.100:8020 simplep2p.go:239
11-13 15:21:23.899 [DEBU] [   secio] 1.1 Identify: <peer.ID 16*7m7viU> Remote Peer Identified as <peer.ID 16*k5DGDT> protocol.go:214
11-13 15:21:23.937 [DEBU] [     net] simpleP2PHost.Dial SecureOutbound ok 0xc0001fc160 0xc0000fe6c0 <nil> simplep2p.go:245
11-13 15:21:23.937 [DEBU] [net.Host] doDialOne ok &net.simpleP2PConn{conn:(*secio.secureSession)(0xc0000fe6c0), inbound:false} 0xc0001a2b10 host.go:107
11-13 15:21:23.937 [DEBU] [net.Host] Dial Signal 0xc0001a2b10 host.go:113
11-13 15:21:23.938 [DEBU] [net.Host] Dial Signal ok 0xc0001a2b10 host.go:115
11-13 15:21:23.938 [DEBU] [net.Host] removeDialer 1 0xc0001a2b10 host.go:417
11-13 15:21:23.973 [INFO] [net.Conn] ReceiveMessage read payload ok 192.168.50.100:8020 Header{Magic=2847459302,Action=BS_Peer_Bootstrap_ListServers,MessageHeaderSize=0,PayloadSize=162,Checksum=0} 0xc0001a8180 0xc0003992c0 162 magic=0xa9b8c7e6-mainnet conn.go:223
11-13 15:21:23.973 [DEBU] [Requeste] Request ok server address= IP:<192.168.50.100> UDPPort:8020 TCPPort:8020  client.go:82
11-13 15:21:23.973 [DEBU] [Requeste] Request ok server req= Header:<TransactionId:1 IsRequest:true Version:1 >  client.go:98
11-13 15:21:23.973 [DEBU] [Requeste] Request ok server res= Header:<TransactionId:1 Version:1 > Result:<> ExternalIP:<192.168.50.121> ExternalPort:8066 Indexers:<Name:"indexer" PeerID:<"00250802122102ec8e7f2675863c26ba5f61c7b7972bd3a5c4a8276566de829390a6faf83470fc"> Address:<IP:<192.168.50.100> UDPPort:8030 TCPPort:8030 > > Verifiers:<Name:"verifier" PeerID:<"00250802122103974c318dc943780b89f526d2c91199c1f5847687250720cee1a7ae3086c7052e"> Address:<IP:<192.168.50.100> UDPPort:8040 TCPPort:8040 > >  client.go:84
11-13 15:21:23.973 [DEBU] [  bs.cli] ListServers request ok, client= [name=default-bootstrap, addr=[IP=192.168.50.100, tpcport=8020, tpcport=8020]] client.go:74
11-13 15:21:23.973 [DEBU] [    ppio] ListServers callback ppio.go:472
11-13 15:21:23.974 [DEBU] [    ppio] ListServers task ppio.go:474
11-13 15:21:23.974 [DEBU] [    ppio] ListServers servers= Indexers
[0]: [name=indexer, addr=[IP=192.168.50.100, tpcport=8030, tpcport=8030]]
Verifiers
[0]: [name=verifier, addr=[IP=192.168.50.100, tpcport=8040, tpcport=8040]]
 ppio.go:479
11-13 15:21:23.974 [DEBU] [    ppio] ListServers servers= Indexers
[0]: [name=indexer, addr=[IP=192.168.50.100, tpcport=8030, tpcport=8030]]
Verifiers
[0]: 